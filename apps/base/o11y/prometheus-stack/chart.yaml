apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus-stack
  namespace: app-o11y
spec:
  interval: 10m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "69.7.2"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: app-o11y
      interval: 10m

  valuesFrom:
    - kind: Secret
      name: grafana-secrets
      valuesKey: admin-password
      targetPath: grafana.adminPassword

  values:
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn-local
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 5Gi

    prometheus:
      prometheusSpec:
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn-local
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 15Gi

        additionalScrapeConfigs:
          - job_name: smartctl-exporter
            static_configs:
              - targets:
                  - smartctl-exporter:9633

          - job_name: jellyfin
            static_configs:
              - targets:
                  - jellyfin.app-jellyfin:8096

          - job_name: traefik
            static_configs:
              - targets:
                  - traefik.traefik-system:80

          - job_name: qbittorrent
            static_configs:
              - targets:
                  - qbittorrent-exporter.app-o11y:8090
        # - job_name: kube-etcd
        #   kubernetes_sd_configs:
        #     - role: node
        #   scheme: https
        #   tls_config:
        #     ca_file:   /etc/prometheus/secrets/etcd-client-cert/etcd-ca
        #     cert_file: /etc/prometheus/secrets/etcd-client-cert/etcd-client
        #     key_file:  /etc/prometheus/secrets/etcd-client-cert/etcd-client-key
        #   relabel_configs:
        #   - action: labelmap
        #     regex: __meta_kubernetes_node_label_(.+)
        #   - source_labels: [__address__]
        #     action: replace
        #     targetLabel: __address__
        #     regex: ([^:;]+):(\d+)
        #     replacement: ${1}:2379
        #   - source_labels: [__meta_kubernetes_node_name]
        #     action: keep
        #     regex: .*mst.*
        #   - source_labels: [__meta_kubernetes_node_name]
        #     action: replace
        #     targetLabel: node
        #     regex: (.*)
        #     replacement: ${1}
        #   metric_relabel_configs:
        #   - regex: (kubernetes_io_hostname|failure_domain_beta_kubernetes_io_region|beta_kubernetes_io_os|beta_kubernetes_io_arch|beta_kubernetes_io_instance_type|failure_domain_beta_kubernetes_io_zone)
        #     action: labeldrop
        #
        ## If scrape config contains a repetitive section, you may want to use a template.
        ## In the following example, you can see how to define `gce_sd_configs` for multiple zones
        # additionalScrapeConfigs: |
        #  - job_name: "node-exporter"
        #    gce_sd_configs:
        #    {{range $zone := .Values.gcp_zones}}
        #    - project: "project1"
        #      zone: "{{$zone}}"
        #      port: 9100
        #    {{end}}
        #    relabel_configs:
        #    ...

    ## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
    ##
    grafana:
      ## Configure additional grafana datasources (passed through tpl)
      ## ref: http://docs.grafana.org/administration/provisioning/#datasources
      additionalDataSources: []
      # - name: prometheus-sample
      #   access: proxy
      #   basicAuth: true
      #   secureJsonData:
      #       basicAuthPassword: pass
      #   basicAuthUser: daco
      #   editable: false
      #   jsonData:
      #       tlsSkipVerify: true
      #   orgId: 1
      #   type: prometheus
      #   url: https://{{ printf "%s-prometheus.svc" .Release.Name }}:9090
      #   version: 1

      # Flag to mark provisioned data sources for deletion if they are no longer configured.
      # It takes no effect if data sources are already listed in the deleteDatasources section.
      # ref: https://grafana.com/docs/grafana/latest/administration/provisioning/#example-data-source-config-file
      prune: true

      ## Editable flag for the default dashboards
      ##
      defaultDashboardsEditable: true

      persistence:
        storageClassName: longhorn-local
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi

      sidecar:
        dashboards:
          searchNamespace: app-o11y

    ## Setting to true produces cleaner resource names, but requires a data migration because the name of the persistent volume changes. Therefore this should only be set once on initial installation.
    ##
    cleanPrometheusOperatorObjectNames: true
